- name: check if file exists
  stat:
    path: "{{ mqtt_password_file }}"
  register: _mqtt_password_file_stat

- name: stat ~> password checksum
  command: "cat {{ _mqtt_password_checksum_file }}"
  register: _mqtt_pass_checksum
  failed_when: _mqtt_pass_checksum.rc > 1
  changed_when: _mqtt_pass_checksum.rc > 99

- name: fact ~> set users hash
  set_fact:
    mqtt_users_hash: "{{ mqtt_users | checksum }}"

- name: fact ~> set users changed state
  set_fact:
    _mqtt_users_changed: "{{ _mqtt_pass_checksum.stdout.find(mqtt_users_hash) == -1 and true or false }}"

- name: file ~> ensure "{{ mqtt_password_file }}" exists
  file:
    path: "{{ mqtt_password_file }}"
    owner: root
    group: root
    mode: '0644'
    state: touch
  when: not _mqtt_password_file_stat.stat.exists

- name: file ~> ensure checksum file exists
  file:
    path: "{{ _mqtt_password_checksum_file }}"
    owner: root
    group: root
    mode: "0644"
    state: touch
  when: _mqtt_pass_checksum.rc > 0

- name: command ~> generate password
  command: "mosquitto_passwd -b {{ mqtt_password_file }} {{ item.username }} {{ item.password }}"
  loop: "{{ mqtt_users }}"
  when: _mqtt_users_changed

- name: command ~> write users checksum
  copy:
    content: "{{ mqtt_users_hash }}"
    dest: "{{ _mqtt_password_checksum_file }}"
  when: _mqtt_users_changed
